let
  copy : {r} *[ p ] {w} -[u 1]-> Unit
  copy (rc, wc) = drop (!{r} rc); drop (!{w} wc)
in
let
  mcopy : {r*} *[ p ] {w*} -[u 1]-> Unit
  mcopy (r0, w0) =
    let r1 = !{r} r0 in let w1 = !{w} w0 in
    let r2 = !{r} r1 in let w2 = !{w} w1 in
    drop r2; drop w2
in
# let
#   xcopy : ({r*} *[ p ] {w*}) *[ l ] ({c} *[ p ] {c})  -[ u 1 ]-> Unit
#   xcopy ((r0, w0), (c1, c2)) =
#     let r1 = !{r} r0 in let w1 = !{w} w0 in
#     let r2 = !{r} r1 in let w2 = !{w} w1 in
#     drop r2; drop w2;
#     drop (!{c} c1); drop (!{c} c2)
# in

let file1 = new {(r|w)*c} in
let file2 = new {(r|w)*c} in

let b1, file11 = split {r} file1 in
let b2, file21 = split {w} file2 in

let b11, file12 = split {r*} file11 in
let b22, file22 = split {w*} file21 in

let _ = copy (b1, b2) in

let _ = mcopy (b11, b22) in

drop (!{c} file12);
drop (!{c} file22)



